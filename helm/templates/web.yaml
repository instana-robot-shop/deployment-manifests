apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    service: web
spec:
  replicas: 1
  selector:
    matchLabels:
      service: web
  template:
    metadata:
      labels:
        service: web
    spec:
      {{ if .Values.psp.enabled }}
      serviceAccountName: robot-shop
      {{ end }}
      containers:
      - name: web
        image: {{ .Values.image.repo }}/rs-web:{{ .Values.image.version }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.eum.key }}
        env:
        - name: INSTANA_EUM_KEY
          value: {{ .Values.eum.key }}
        - name: INSTANA_EUM_REPORTING_URL
          value: {{ .Values.eum.url }}
        {{- end}}
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

--- 

{{ if not .Values.minikube }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "myapp.fullname" . }}
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: {{ .Values.ingress.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "myapp.fullname" . }}
                port:
                  name: http
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ include "myapp.tls_secret_name" . }}
{{ end }}

--- 

apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    service: web
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    service: web
  {{ if .Values.minikube }}
  type: NodePort
  {{ else }}
  type: LoadBalancer
  {{ end }}
---
{{if .Values.ocCreateRoute}}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: web
spec:
  to:
    kind: Service
    name: web
{{end}}
